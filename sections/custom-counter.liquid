{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} custom-counter-wrapper">
  <div class="custom-counter-inner page-width section-{{ section.id }}-padding isolate">
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper--no-top-margin">
        <h2 class="title inline-richtext {{ section.settings.heading_size }}">
          {{ section.settings.title }}
        </h2>
      </div>
    {%- endunless -%}
    <ul class="custom-counter-text grid page-width--narrow">
      {% for block in section.blocks %}
        <li class="grid__item">
          {% if block.settings.image != blank %}
            {{
              block.settings.image
              | image_url: width: 3200
              | image_tag:
                loading: 'lazy',
                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                class: 'custom-counter__image'
            }}
            <div class="custom-counter__texts">
              <div class="counter_headtext">
                <p class="value_counter" data-stop-value="{{ block.settings.stop_value }}">0</p>
                <p class="value_text">{{ block.settings.text }}</p>
              </div>
            </div>
          {% endif %}
        </li>
      {% endfor %}
    </ul>
  </div>
</div>

<script>
  const counterTop = document.querySelector('.custom-counter-inner');
  if(counterTop.offsetTop > 550){
    const counters = document.querySelectorAll('.value_counter');
    const speed = 200;
    counters.forEach( counter => {
      const animate = () => {
        const value = +counter.getAttribute('data-stop-value');
        const data = +counter.innerText;
       
        const time = value / speed;
        if(data < value) {
          counter.innerText = Math.ceil(data + time) + "+";
          setTimeout(animate, 1);
        }
        else {
          counter.innerText = value + "+";
        }
      }
      animate();
    });
  }
</script>

{% schema %}
  {
    "name": "Custom Counter",
    "tag": "section",
    "class": "section",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "settings": [
      {
        "type": "inline_richtext",
        "id": "title",
        "default": "Counter",
        "label": "Heading"
      },
      {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
          },
          {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
          },
          {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
          }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
      },
      {
        "type": "select",
        "id": "color_scheme",
        "options": [
          {
            "value": "accent-1",
            "label": "t:sections.all.colors.accent_1.label"
          },
          {
            "value": "accent-2",
            "label": "t:sections.all.colors.accent_2.label"
          },
          {
            "value": "background-1",
            "label": "t:sections.all.colors.background_1.label"
          },
          {
            "value": "background-2",
            "label": "t:sections.all.colors.background_2.label"
          },
          {
            "value": "inverse",
            "label": "t:sections.all.colors.inverse.label"
          }
        ],
        "default": "background-1",
        "label": "t:sections.all.colors.label"
      },
      {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ],
    "blocks": [
      {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "limit": 4,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Column",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "number",
          "id": "stop_value",
          "label": "Enter stop value"
        }
      ]
    }
    ],
    "presets": [
      {
        "name": "Custom Counter"
      }
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}